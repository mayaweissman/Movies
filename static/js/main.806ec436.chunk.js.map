{"version":3,"sources":["redux/actionType.ts","reportWebVitals.ts","models/movieModel.ts","redux/appState.ts","redux/store.js","redux/reducer.ts","redux/middleware.ts","components/movie-pop-up/movie-pop-up.tsx","components/movies/movies.tsx","components/home/home.tsx","components/login/login.tsx","components/layout/layout.tsx","index.tsx"],"names":["ActionType","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","MovieModel","Poster","Title","Type","Year","imdbID","store","createStore","oldAppState","action","newAppState","type","addMovieToUsersMovies","usersMovies","push","payLoad","getMovies","moviesToDisplay","removeMovieFromUsersMovies","index","findIndex","m","splice","changeDisplayForPopUp","displayPopUp","json","sessionStorage","getItem","appState","JSON","parse","this","applyMiddleware","next","setItem","stringify","getState","MoviePopUp","props","state","plot","short","full","plotDisplay","showLoader","setState","axios","get","movie","responseForShort","responseForFull","fullPlot","data","Plot","shortPlot","console","log","message","className","onClick","dispatch","src","Component","Movies","unsubscribeStore","openPopUp","event","movieToPopUp","isOnFavorites","find","handleToggleForMovieOnUsersList","stopPropagation","movies","subscribe","text","map","Home","searchMovies","args","a","searchVal","target","value","isUserStartTyping","response","moviesData","Response","textOnNoMovies","Error","Search","displayUsersMovies","length","username","screenWidth","history","window","screen","width","placeholder","onInput","fontSize","Login","setNameLocally","name","error","saveNameOnSessionStorgae","Layout","path","component","exact","from","to","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.806ec436.chunk.js","sourcesContent":["export enum ActionType {\r\n  addMovieToUsersMovies,\r\n  removeMovieFromUsersMovies,\r\n  getMovies,\r\n  changeDisplayForPopUp,\r\n  \r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export class MovieModel {\r\n    public constructor(\r\n      public Poster?: string,\r\n      public Title?: string,\r\n      public Type?: string,\r\n      public Year?: string, \r\n      public imdbID?: string,\r\n    ) {}\r\n  }\r\n  \r\n  ","import { MovieModel } from \"../models/movieModel\";\r\n\r\nexport class AppState {\r\n    public usersMovies: MovieModel[] = [];\r\n    public displayPopUp: boolean = false;\r\n    public moviesToDisplay: MovieModel[] = [];\r\n\r\n    public constructor() {\r\n        const json = sessionStorage.getItem(\"AppState\");\r\n        if (json) {\r\n            const appState: AppState = JSON.parse(json);\r\n            this.usersMovies = appState.usersMovies;\r\n        }\r\n    }\r\n}\r\n","import { reducer } from \"./reducer\";\r\nimport { AppState } from \"./appState\";\r\nimport { applyMiddleware, createStore  } from \"redux\";\r\nimport { saveToSessionStorage } from \"./middleware\";\r\n\r\n\r\nexport const store = createStore(reducer, new AppState(), applyMiddleware(saveToSessionStorage));\r\n\r\n\r\n","import { AppState } from \"./appState\";\r\nimport { Action } from \"./action\";\r\nimport { ActionType } from \"./actionType\";\r\n\r\n\r\nexport function reducer(oldAppState: AppState, action: Action): AppState {\r\n\r\n    const newAppState = { ...oldAppState }; //Duplicate the old state into a new state\r\n\r\n    switch (action.type) {\r\n\r\n        case ActionType.addMovieToUsersMovies:\r\n            newAppState.usersMovies.push(action.payLoad);\r\n            break;\r\n\r\n        case ActionType.getMovies:\r\n            newAppState.moviesToDisplay = action.payLoad;\r\n            break;\r\n\r\n        case ActionType.removeMovieFromUsersMovies:\r\n            const index = newAppState.usersMovies.findIndex(m => m.imdbID === action.payLoad);\r\n            newAppState.usersMovies.splice(index, 1);\r\n            break;\r\n\r\n        case ActionType.changeDisplayForPopUp:\r\n            if (newAppState.displayPopUp) {\r\n                newAppState.displayPopUp = false;\r\n            }\r\n            else {\r\n                newAppState.displayPopUp = true;\r\n            }\r\n            break;\r\n\r\n\r\n\r\n        default: break;\r\n    }\r\n\r\n    return newAppState;\r\n}\r\n","import { Store } from \"redux\";\r\nimport { AppState } from \"./appState\";\r\nimport { Action } from \"./action\";\r\n\r\nexport const saveToSessionStorage = (store: { getState: () => any; }) => (next: (arg0: any) => void) => (action: any) => {\r\n    next(action);\r\n    sessionStorage.setItem(\"AppState\", JSON.stringify(store.getState()));\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { MovieModel } from \"../../models/movieModel\";\r\nimport \"./movie-pop-up.scss\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\r\nimport axios from \"axios\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { store } from \"../../redux/store\";\r\nimport { ActionType } from \"../../redux/actionType\";\r\n\r\ninterface MoviePopUpProps {\r\n  movie: MovieModel;\r\n}\r\n\r\ninterface MoviePopUpState {\r\n  plot: {\r\n    short: string;\r\n    full: string;\r\n  };\r\n  plotDisplay: string;\r\n  showLoader: boolean;\r\n}\r\n\r\nexport class MoviePopUp extends Component<MoviePopUpProps, MoviePopUpState> {\r\n  public constructor(props: MoviePopUpProps) {\r\n    super(props);\r\n    this.state = {\r\n      plot: {\r\n        short: \"\",\r\n        full: \"\",\r\n      },\r\n      plotDisplay: \"short\",\r\n      showLoader: false,\r\n    };\r\n  }\r\n\r\n  public async componentDidMount() {\r\n    try {\r\n\r\n      //Get Plots for movie from API\r\n      this.setState({ showLoader: true });\r\n      const responseForShort = await axios.get(\r\n        `http://www.omdbapi.com/?apikey=99890933&i=${this.props.movie.imdbID}`\r\n      );\r\n      const responseForFull = await axios.get(\r\n        `http://www.omdbapi.com/?apikey=99890933&i=${this.props.movie.imdbID}&plot=full`\r\n      );\r\n      const fullPlot = responseForFull.data.Plot;\r\n      const shortPlot = responseForShort.data.Plot;\r\n      const plot = { ...this.state.plot };\r\n      plot.short = shortPlot;\r\n      plot.full = fullPlot;\r\n      this.setState({ plot });\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    } finally {\r\n      //Hide loader on finish\r\n      this.setState({ showLoader: false });\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className=\"pop-up\">\r\n        <div className=\"inside-pop-up\">\r\n          <button\r\n            className=\"close-btn\"\r\n            onClick={() =>\r\n              store.dispatch({ type: ActionType.changeDisplayForPopUp })\r\n            }\r\n          >\r\n            <CloseIcon />\r\n          </button>\r\n\r\n          <div className=\"movie-info\">\r\n            <div className=\"movie-main-info\">\r\n              <span className=\"movie-title\">{this.props.movie.Title}</span>\r\n              <span className=\"movie-year\">{this.props.movie.Year}</span>\r\n            </div>\r\n\r\n            {this.props.movie.Poster !== \"N/A\" && (\r\n              <img src={this.props.movie.Poster} />\r\n            )}\r\n            {this.props.movie.Poster === \"N/A\" && (\r\n              <div className=\"no-img\">No img to movie</div>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"plot-area\">\r\n            {this.state.showLoader && (\r\n              <img src=\"./assets/images/horizontal-lodaer.gif\" className=\"plot-loader\"/>\r\n            )}\r\n            <div className=\"plot\">\r\n              {this.state.plotDisplay === \"short\"\r\n                ? this.state.plot.short\r\n                : this.state.plot.full}\r\n            </div>\r\n            <button\r\n              onClick={\r\n                this.state.plotDisplay === \"short\"\r\n                  ? () => this.setState({ plotDisplay: \"full\" })\r\n                  : () => this.setState({ plotDisplay: \"short\" })\r\n              }\r\n            >\r\n              {this.state.plotDisplay === \"short\" ? (\r\n                <>\r\n                  Full plot <ExpandMoreIcon />{\" \"}\r\n                </>\r\n              ) : (\r\n                <>\r\n                  Short plot <ExpandLessIcon />{\" \"}\r\n                </>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { MovieModel } from \"../../models/movieModel\";\r\nimport \"./movies.scss\";\r\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\r\nimport { Unsubscribe } from \"redux\";\r\nimport { store } from \"../../redux/store\";\r\nimport { MoviePopUp } from \"../movie-pop-up/movie-pop-up\";\r\nimport { ActionType } from \"../../redux/actionType\";\r\n\r\ninterface MoviesProps {\r\n  text: string;\r\n}\r\n\r\ninterface MoviesState {\r\n  displayPopUp: boolean;\r\n  movies: MovieModel[];\r\n  movieToPopUp: MovieModel;\r\n}\r\n\r\nexport class Movies extends Component<MoviesProps, MoviesState> {\r\n  private unsubscribeStore: Unsubscribe;\r\n\r\n  public constructor(props: MoviesProps) {\r\n    super(props);\r\n    this.state = {\r\n      displayPopUp: store.getState().displayPopUp,\r\n      movies: store.getState().moviesToDisplay,\r\n      movieToPopUp: new MovieModel(),\r\n    };\r\n\r\n    //Subscribe to store\r\n    this.unsubscribeStore = store.subscribe(() => {\r\n      const displayPopUp = store.getState().displayPopUp;\r\n      const movies = store.getState().moviesToDisplay;\r\n      this.setState({ displayPopUp });\r\n      this.setState({ movies });\r\n    });\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this.unsubscribeStore = store.subscribe(() => {\r\n      const displayPopUp = store.getState().displayPopUp;\r\n      const movies = store.getState().moviesToDisplay;\r\n      this.setState({ displayPopUp });\r\n      this.setState({ movies });\r\n    });\r\n  }\r\n\r\n  public componentWillUnmount(): void {\r\n    this.unsubscribeStore();\r\n  }\r\n\r\n  public openPopUp = (movie: MovieModel) => (event: any) => {\r\n    this.setState({ movieToPopUp: movie });\r\n    store.dispatch({ type: ActionType.changeDisplayForPopUp });\r\n  };\r\n\r\n  //Return if movie already on user's list\r\n  public isOnFavorites = (movie: MovieModel) => {\r\n    const usersMovies: MovieModel[] = store.getState().usersMovies;\r\n    const isExist = usersMovies.find((m) => m.imdbID === movie.imdbID);\r\n    if (isExist) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n\r\n  //Toggle for movie on user's list - Remove from list if exist / insert if not.\r\n  public handleToggleForMovieOnUsersList =\r\n    (movie: MovieModel) => (event: any) => {\r\n\r\n      //Do not open movie pop up\r\n      event.stopPropagation();\r\n      let isExist = this.isOnFavorites(movie);\r\n      if (isExist) {\r\n        store.dispatch({\r\n          type: ActionType.removeMovieFromUsersMovies,\r\n          payLoad: movie.imdbID,\r\n        });\r\n        return;\r\n      }\r\n      store.dispatch({\r\n        type: ActionType.addMovieToUsersMovies,\r\n        payLoad: movie\r\n      });\r\n    };\r\n\r\n  public render() {\r\n    return (\r\n      <div className=\"movies\">\r\n        {!this.props.text && (\r\n          <div className=\"movies-container\">\r\n            {this.state.movies.map((m) => (\r\n              <div className=\"movie\" key={m.imdbID} onClick={this.openPopUp(m)}>\r\n                {m.Poster !== \"N/A\" && <img src={m.Poster} />}\r\n                {m.Poster === \"N/A\" && (\r\n                  <div className=\"no-img\">No img to movie</div>\r\n                )}\r\n                <div className=\"title-area\">\r\n                  <span className=\"movie-title\">{m.Title}</span>\r\n                </div>\r\n                <span className=\"movie-year\">{m.Year}</span>\r\n                <button onClick={this.handleToggleForMovieOnUsersList(m)}>\r\n                  {this.isOnFavorites(m) ? (\r\n                    <>\r\n                      Remove from favorites <StarBorderIcon />\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      Add to favorites <StarBorderIcon />\r\n                    </>\r\n                  )}\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        <span className=\"no-movies-txt\">\r\n          {this.props.text && this.props.text}\r\n        </span>\r\n        \r\n        {this.state.displayPopUp && (\r\n          <MoviePopUp movie={this.state.movieToPopUp} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { ChangeEvent, Component } from \"react\";\r\nimport \"./home.scss\";\r\nimport axios from \"axios\";\r\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\r\nimport { MovieModel } from \"../../models/movieModel\";\r\nimport { Movies } from \"../movies/movies\";\r\nimport { store } from \"../../redux/store\";\r\nimport { ActionType } from \"../../redux/actionType\";\r\n\r\ninterface MoviesState {\r\n  username: string;\r\n  isUserStartTyping: boolean;\r\n  showLoader: boolean;\r\n  textOnNoMovies: string;\r\n  screenWidth: number;\r\n}\r\n\r\nexport class Home extends Component<any, MoviesState> {\r\n  public constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      isUserStartTyping: false,\r\n      showLoader: false,\r\n      textOnNoMovies: \"\",\r\n      screenWidth: 0,\r\n    };\r\n  }\r\n\r\n  public componentDidMount() {\r\n    //If have no username key on session storage take user back to login page\r\n    const username = sessionStorage.getItem(\"username\");\r\n    if (!username) {\r\n      this.props.history.push(\"/login\");\r\n    } else {\r\n      this.setState({ username });\r\n    }\r\n\r\n    const usersMovies = store.getState().moviesToDisplay;\r\n    if (usersMovies.length > 0) {\r\n      this.setState({ isUserStartTyping: true });\r\n      this.setState({ textOnNoMovies: \"\" });\r\n    }\r\n    this.setState({ screenWidth: window.screen.width });\r\n  }\r\n\r\n  public searchMovies = async (args: ChangeEvent<HTMLInputElement>) => {\r\n    try {\r\n      //Show loader on start searching\r\n      this.setState({ showLoader: true });\r\n      const searchVal = args.target.value;\r\n      if (searchVal) {\r\n        //Get movies from OMDb API\r\n        this.setState({ isUserStartTyping: true });\r\n        const response = await axios.get(\r\n          `http://www.omdbapi.com/?apikey=99890933&s=${searchVal}&page=`\r\n        );\r\n        const moviesData = response.data;\r\n\r\n        //If got no movies from API\r\n        if (moviesData.Response === \"False\") {\r\n          this.setState({ textOnNoMovies: moviesData.Error });\r\n        } else {\r\n          const movies: MovieModel[] = moviesData.Search;\r\n          this.setState({ textOnNoMovies: \"\" });\r\n          store.dispatch({ type: ActionType.getMovies, payLoad: movies });\r\n        }\r\n      } else {\r\n        this.setState({ isUserStartTyping: false });\r\n        this.setState({ textOnNoMovies: \"\" });\r\n        store.dispatch({ type: ActionType.getMovies, payLoad: [] });\r\n      }\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    } finally {\r\n      //Hide loader on finish searching\r\n      this.setState({ showLoader: false });\r\n      if (!args.target.value) {\r\n        this.setState({ textOnNoMovies: \"\" });\r\n      }\r\n    }\r\n  };\r\n\r\n  public displayUsersMovies = () => {\r\n    this.setState({ isUserStartTyping: true });\r\n    const usersMovies = store.getState().usersMovies;\r\n    store.dispatch({ type: ActionType.getMovies, payLoad: usersMovies });\r\n\r\n    if (usersMovies.length > 0) {\r\n      this.setState({ textOnNoMovies: \"\" });\r\n    } else {\r\n      this.setState({ textOnNoMovies: \"No favorites movies selected\" });\r\n    }\r\n  };\r\n\r\n  public render() {\r\n    return (\r\n      <div className=\"home\">\r\n        <header>\r\n          <span className=\"username\">Hello {this.state.username}!</span>\r\n          <input\r\n            placeholder=\"Search movies\"\r\n            className={this.state.isUserStartTyping ? \"active\" : \"\"}\r\n            onInput={this.searchMovies}\r\n          />\r\n          <button onClick={this.displayUsersMovies}>\r\n            {\" \"}\r\n            {this.state.screenWidth > 700 && (\r\n              <>\r\n                <StarBorderIcon />\r\n                My movies\r\n              </>\r\n            )}\r\n            {this.state.screenWidth < 700 && <StarBorderIcon fontSize='large'/>}\r\n          </button>\r\n        </header>\r\n\r\n        <main>\r\n          {this.state.showLoader && <img src=\"./assets/images/loader.gif\" />}\r\n          {!this.state.showLoader && (\r\n            <Movies text={this.state.textOnNoMovies} />\r\n          )}\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { extend } from \"lodash\";\r\nimport React, { ChangeEvent, Component } from \"react\";\r\nimport \"./login.scss\";\r\n\r\ninterface LoginState {\r\n  name: string;\r\n  error: string;\r\n}\r\n\r\nexport class Login extends Component<any, LoginState> {\r\n  public constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      error: \"\",\r\n    };\r\n  }\r\n\r\n  public setNameLocally = (args: ChangeEvent<HTMLInputElement>) => {\r\n    const name = args.target.value;\r\n    let error = \" \";\r\n\r\n    if (!name) {\r\n      error = \"Please enter your name\";\r\n    } else if (name.length < 2) {\r\n      error = \"Name muse include at least 2 characters\";\r\n    }\r\n\r\n    this.setState({ error });\r\n    this.setState({ name });\r\n  };\r\n\r\n  public saveNameOnSessionStorgae = () => {\r\n\r\n    //If name is legal - Move to Home page and save name on session storage\r\n    if (this.state.error !== \" \") {\r\n      this.setState({ error: \"Please enter your name\" });\r\n      return;\r\n    }\r\n\r\n    sessionStorage.setItem(\"username\", this.state.name);\r\n    this.props.history.push(\"/movies\");\r\n  };\r\n\r\n  public render() {\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"login-contanier\">\r\n          <h1>Login</h1>\r\n          <div className=\"name-area\">\r\n            <input\r\n              onInput={this.setNameLocally}\r\n              className=\"name-box\"\r\n              placeholder=\"Enter your name\"\r\n            />\r\n            <span className=\"err\">{this.state.error}</span>\r\n          </div>\r\n\r\n          <button onClick={this.saveNameOnSessionStorgae}>Login</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { Home } from \"../home/home\";\r\nimport { Login } from \"../login/login\";\r\nimport \"./layout.scss\";\r\n\r\nexport class Layout extends Component {\r\n    public render() {\r\n        return (\r\n            <div className=\"layout\">\r\n                <BrowserRouter>\r\n                        <Switch>\r\n                            <Route path=\"/login\" component={Login} exact />\r\n                            <Route path=\"/movies\" component={Home} exact />\r\n                            <Redirect from=\"/\" to=\"/movies\" />\r\n                        </Switch>                    \r\n                </BrowserRouter>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Layout } from './components/layout/layout';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Layout />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}